// Code generated by go-swagger; DO NOT EDIT.

package publications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dstuart/models"
)

// GetUsersUserIDPublicationsReader is a Reader for the GetUsersUserIDPublications structure.
type GetUsersUserIDPublicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersUserIDPublicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersUserIDPublicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersUserIDPublicationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersUserIDPublicationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /users/{userId}/publications] GetUsersUserIDPublications", response, response.Code())
	}
}

// NewGetUsersUserIDPublicationsOK creates a GetUsersUserIDPublicationsOK with default headers values
func NewGetUsersUserIDPublicationsOK() *GetUsersUserIDPublicationsOK {
	return &GetUsersUserIDPublicationsOK{}
}

/*
GetUsersUserIDPublicationsOK describes a response with status code 200, with default header values.

OK
*/
type GetUsersUserIDPublicationsOK struct {
	Payload *models.PublicationResponse
}

// IsSuccess returns true when this get users user Id publications o k response has a 2xx status code
func (o *GetUsersUserIDPublicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users user Id publications o k response has a 3xx status code
func (o *GetUsersUserIDPublicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id publications o k response has a 4xx status code
func (o *GetUsersUserIDPublicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users user Id publications o k response has a 5xx status code
func (o *GetUsersUserIDPublicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id publications o k response a status code equal to that given
func (o *GetUsersUserIDPublicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get users user Id publications o k response
func (o *GetUsersUserIDPublicationsOK) Code() int {
	return 200
}

func (o *GetUsersUserIDPublicationsOK) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsOK  %+v", 200, o.Payload)
}

func (o *GetUsersUserIDPublicationsOK) String() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsOK  %+v", 200, o.Payload)
}

func (o *GetUsersUserIDPublicationsOK) GetPayload() *models.PublicationResponse {
	return o.Payload
}

func (o *GetUsersUserIDPublicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PublicationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDPublicationsUnauthorized creates a GetUsersUserIDPublicationsUnauthorized with default headers values
func NewGetUsersUserIDPublicationsUnauthorized() *GetUsersUserIDPublicationsUnauthorized {
	return &GetUsersUserIDPublicationsUnauthorized{}
}

/*
GetUsersUserIDPublicationsUnauthorized describes a response with status code 401, with default header values.

The `accessToken` is invalid, lacks the `listPublications` scope or has been revoked.
*/
type GetUsersUserIDPublicationsUnauthorized struct {
}

// IsSuccess returns true when this get users user Id publications unauthorized response has a 2xx status code
func (o *GetUsersUserIDPublicationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users user Id publications unauthorized response has a 3xx status code
func (o *GetUsersUserIDPublicationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id publications unauthorized response has a 4xx status code
func (o *GetUsersUserIDPublicationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users user Id publications unauthorized response has a 5xx status code
func (o *GetUsersUserIDPublicationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id publications unauthorized response a status code equal to that given
func (o *GetUsersUserIDPublicationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get users user Id publications unauthorized response
func (o *GetUsersUserIDPublicationsUnauthorized) Code() int {
	return 401
}

func (o *GetUsersUserIDPublicationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsUnauthorized ", 401)
}

func (o *GetUsersUserIDPublicationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsUnauthorized ", 401)
}

func (o *GetUsersUserIDPublicationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersUserIDPublicationsForbidden creates a GetUsersUserIDPublicationsForbidden with default headers values
func NewGetUsersUserIDPublicationsForbidden() *GetUsersUserIDPublicationsForbidden {
	return &GetUsersUserIDPublicationsForbidden{}
}

/*
GetUsersUserIDPublicationsForbidden describes a response with status code 403, with default header values.

The request attempts to list publications for another user.
*/
type GetUsersUserIDPublicationsForbidden struct {
}

// IsSuccess returns true when this get users user Id publications forbidden response has a 2xx status code
func (o *GetUsersUserIDPublicationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users user Id publications forbidden response has a 3xx status code
func (o *GetUsersUserIDPublicationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id publications forbidden response has a 4xx status code
func (o *GetUsersUserIDPublicationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users user Id publications forbidden response has a 5xx status code
func (o *GetUsersUserIDPublicationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id publications forbidden response a status code equal to that given
func (o *GetUsersUserIDPublicationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get users user Id publications forbidden response
func (o *GetUsersUserIDPublicationsForbidden) Code() int {
	return 403
}

func (o *GetUsersUserIDPublicationsForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsForbidden ", 403)
}

func (o *GetUsersUserIDPublicationsForbidden) String() string {
	return fmt.Sprintf("[GET /users/{userId}/publications][%d] getUsersUserIdPublicationsForbidden ", 403)
}

func (o *GetUsersUserIDPublicationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
